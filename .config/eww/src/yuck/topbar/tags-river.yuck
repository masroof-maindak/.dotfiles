(defwidget workspaces []
    (eventbox
        :valign "center"
        (box
            :orientation "v"
            :class "workspacesWidget"
            :space-evenly false
            (box
                :orientation "h"
                (for num in {[0, 1, 2]}
                    (workspace :id {tags[num].id} :act {tags[num].active } :foc {tags[num].focused} :occ {tags[num].occupied} :urg {tags[num].urgent})))
            (box
                :orientation "h"
                (for num in {[3, 4, 5]}
                	(workspace :id {tags[num].id} :act {tags[num].active } :foc {tags[num].focused} :occ {tags[num].occupied} :urg {tags[num].urgent})))
            (box
                :orientation "h"
                (for num in {[6, 7, 8]}
                	(workspace :id {tags[num].id} :act {tags[num].active } :foc {tags[num].focused} :occ {tags[num].occupied} :urg {tags[num].urgent}))))))

(defwidget workspace [id urg foc act occ]
   (eventbox
    	:onclick "bspc desktop -f ${id}"
    	:cursor "pointer"
    	(box
    		:class 'workspacesBox ${
			urg == "true" ? "urgent" :
			foc == "true" ? "focused" :
			act == "true" ? "active" : 
			occ == "true" ? "occupied" : "default"
			}')))

; active means on the current monitor ?
; occupied means a window exists there ?

(deflisten tags :initial "[{}]" "river-bedload -minified -watch tags")
